import React, { useState, useEffect } from 'react';
import { Wallet, Mail, Chrome } from 'lucide-react';

const Web3App = () => {
  const [showSplash, setShowSplash] = useState(true);
  const [rotation, setRotation] = useState(0);

  useEffect(() => {
    const timer = setTimeout(() => {
      setShowSplash(false);
    }, 3000);

    const rotationInterval = setInterval(() => {
      setRotation(prev => (prev + 2) % 360);
    }, 16);

    return () => {
      clearTimeout(timer);
      clearInterval(rotationInterval);
    };
  }, []);

  const DhammaChakra = () => {
    const spokes = 24;
    const radius = 100;
    
    return (
      <div className="relative w-80 h-80 flex items-center justify-center">
        <div className="relative w-64 h-64" style={{ transform: `rotate(${rotation}deg)` }}>
          {/* Outer fiery ring */}
          <div className="absolute inset-0 rounded-full bg-gradient-to-r from-orange-500 via-red-500 to-orange-600 opacity-80 blur-sm animate-pulse"></div>
          
          {/* Main chakra body */}
          <div className="absolute inset-4 rounded-full bg-gradient-to-br from-blue-400 via-blue-600 to-blue-800 shadow-2xl"></div>
          
          {/* Center circle */}
          <div className="absolute inset-20 rounded-full bg-gradient-to-br from-blue-300 to-blue-500 shadow-inner"></div>
          
          {/* 24 Spokes */}
          <svg className="absolute inset-0 w-full h-full" viewBox="0 0 256 256">
            <g transform="translate(128, 128)">
              {[...Array(spokes)].map((_, i) => {
                const angle = (i * 360) / spokes;
                const x1 = 0;
                const y1 = 0;
                const x2 = radius * Math.cos((angle - 90) * Math.PI / 180);
                const y2 = radius * Math.sin((angle - 90) * Math.PI / 180);
                
                return (
                  <line
                    key={i}
                    x1={x1}
                    y1={y1}
                    x2={x2}
                    y2={y2}
                    stroke="white"
                    strokeWidth="3"
                    opacity="0.9"
                  />
                );
              })}
            </g>
          </svg>
          
          {/* Flame flares spreading outwards */}
          {[...Array(24)].map((_, i) => (
            <div
              key={i}
              className="absolute top-1/2 left-1/2"
              style={{
                transform: `translate(-50%, -50%) rotate(${i * 15}deg)`,
                transformOrigin: 'center',
                width: '100%',
                height: '100%'
              }}
            >
              <div
                className="absolute top-0 left-1/2 w-3 h-16 bg-gradient-to-t from-orange-600 via-orange-400 to-transparent rounded-full blur-sm"
                style={{
                  transform: 'translateX(-50%) translateY(-20px)',
                  animation: `flare ${1.5 + Math.random() * 0.5}s ease-in-out infinite alternate`,
                  animationDelay: `${i * 0.05}s`
                }}
              ></div>
            </div>
          ))}
          {[...Array(24)].map((_, i) => (
            <div
              key={`outer-${i}`}
              className="absolute top-1/2 left-1/2"
              style={{
                transform: `translate(-50%, -50%) rotate(${i * 15 + 7.5}deg)`,
                transformOrigin: 'center',
                width: '100%',
                height: '100%'
              }}
            >
              <div
                className="absolute top-0 left-1/2 w-2 h-20 bg-gradient-to-t from-red-600 via-orange-500 to-transparent rounded-full blur-md"
                style={{
                  transform: 'translateX(-50%) translateY(-25px)',
                  animation: `flare ${1.8 + Math.random() * 0.7}s ease-in-out infinite alternate`,
                  animationDelay: `${i * 0.07}s`
                }}
              ></div>
            </div>
          ))}
        </div>
      </div>
    );
  };

  const Logo = ({ small = false }) => (
    <div className={`${small ? 'w-12 h-12' : 'w-32 h-32'} flex items-center justify-center`}>
      <img 
        src="https://i.postimg.cc/1XxQvGCg/image.png" 
        alt="Logo" 
        className="w-full h-full object-contain"
      />
    </div>
  );

  if (showSplash) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 flex items-center justify-center overflow-hidden">
        <style>{`
          @keyframes flare {
            0% { 
              opacity: 0.4; 
              transform: translateX(-50%) translateY(-20px) scaleY(0.8);
            }
            100% { 
              opacity: 1; 
              transform: translateX(-50%) translateY(-40px) scaleY(1.3);
            }
          }
        `}</style>
        
        <div className="relative">
          <DhammaChakra />
          <div className="absolute inset-0 flex items-center justify-center">
            <Logo />
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 flex flex-col">
      {/* Header with Logo */}
      <div className="p-4 flex justify-end">
        <Logo small={true} />
      </div>

      {/* Auth Content */}
      <div className="flex-1 flex items-center justify-center px-6 pb-12">
        <div className="w-full max-w-md">
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-white mb-3">Welcome</h1>
            <p className="text-blue-200 text-lg">Connect your wallet to continue</p>
          </div>

          <div className="space-y-4">
            {/* MetaMask */}
            <button className="w-full bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white font-semibold py-4 px-6 rounded-2xl shadow-lg transform transition hover:scale-105 flex items-center justify-center gap-3">
              <Wallet className="w-6 h-6" />
              <span>Connect with MetaMask</span>
            </button>

            {/* WalletConnect */}
            <button className="w-full bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-2xl shadow-lg transform transition hover:scale-105 flex items-center justify-center gap-3">
              <Wallet className="w-6 h-6" />
              <span>WalletConnect</span>
            </button>

            {/* Coinbase Wallet */}
            <button className="w-full bg-gradient-to-r from-indigo-500 to-indigo-600 hover:from-indigo-600 hover:to-indigo-700 text-white font-semibold py-4 px-6 rounded-2xl shadow-lg transform transition hover:scale-105 flex items-center justify-center gap-3">
              <Wallet className="w-6 h-6" />
              <span>Coinbase Wallet</span>
            </button>

            <div className="relative my-8">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-blue-400/30"></div>
              </div>
              <div className="relative flex justify-center text-sm">
                <span className="px-4 bg-slate-900 text-blue-300">Or continue with</span>
              </div>
            </div>

            {/* Email */}
            <button className="w-full bg-slate-800 hover:bg-slate-700 text-white font-semibold py-4 px-6 rounded-2xl shadow-lg transform transition hover:scale-105 flex items-center justify-center gap-3 border border-blue-500/30">
              <Mail className="w-6 h-6" />
              <span>Continue with Email</span>
            </button>

            {/* Google */}
            <button className="w-full bg-white hover:bg-gray-100 text-gray-800 font-semibold py-4 px-6 rounded-2xl shadow-lg transform transition hover:scale-105 flex items-center justify-center gap-3">
              <Chrome className="w-6 h-6" />
              <span>Continue with Google</span>
            </button>
          </div>

          <p className="text-center text-blue-300/60 text-sm mt-8">
            By connecting, you agree to our Terms of Service and Privacy Policy
          </p>
        </div>
      </div>
    </div>
  );
};

export default Web3App;
